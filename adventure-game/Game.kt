import Game.Companion.isGameFinished

class Game() {
    companion object {
        var isGameFinished: Boolean = false
    }
}
fun main () {

    startMessage()

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç –≤ –¥–æ–º(–º–∞—Å—Å–∏–≤)
    val rooms: MutableList<Room> = mutableListOf()
    val roomBathroom = Bathroom()
    val roomBedroom = Bedroom()
    val roomKitchen = Kitchen()
    rooms.add(roomBathroom)
    rooms.add(roomBedroom)
    rooms.add(roomKitchen)

// –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
    print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ –≥–µ—Ä–æ—è: ")
    val player = Player(readln().ifBlank {
        println("–û—à–∏–±–∫–∞: –∏–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã.")
        return
    }

    )
    println("----------------------")

// –ù–∞—á–∞–ª–æ –æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏ –∏–≥—Ä—ã, –¥–µ–π—Å—Ç–≤—É–µ—Ç —Ü–∏–∫–ª–∏—á–Ω–æ
    while (true) {
        if (isGameFinished == true) {
            endMessage(player.name, player.inventory)
            return
        }
        when (showMenu()) {
            1 -> {
                var whatIsShowRooms = showRooms(rooms)
                if (whatIsShowRooms in 1..3) player.currentRoom = rooms[whatIsShowRooms - 1]
                else if (whatIsShowRooms == 0) println(); continue
            }
            2 -> player.showItems()
            0 -> {
                println("–í—ã –≤—ã—Ö–æ–¥–∏—Ç–µ –∏–∑ –∏–≥—Ä—ã. –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!")
                return
            }
        }
    }

}

// –ú–µ—Ç–æ–¥—ã (—Ñ—É–Ω–∫—Ü–∏–∏) –≤—ã–Ω–µ—Å–µ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã –Ω–µ —Å–±–∏–≤–∞—Ç—å—Å—è –≤ –∫—É—á—É
fun startMessage() {
    println(
        """
            ====================================================
            |          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–î–æ–º"!          |
            |                                                  |
            |     ...–í—ã –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç–µ —Å–µ–±—è –≤ —á—É–∂–æ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ.   |
            |  –° –≤–∞–º–∏ –µ—Å—Ç—å –µ—â–µ –∫—Ç–æ-—Ç–æ –∏ —ç—Ç–æ —Å—É—â–µ—Å—Ç–≤–æ –Ω—É–∂–¥–∞–µ—Ç—Å—è |
            |                  –≤ –≤–∞—à–µ–π –ø–æ–º–æ—â–∏.                 |
            |                                                  |
            |   –í–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –æ—Å–æ–±—ã–π –ø—Ä–µ–¥–º–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç  |
            |                  –±—ã—Ç—å –≥–¥–µ —É–≥–æ–¥–Ω–æ.                |
            |                                          –£–¥–∞—á–∏!  |
            ====================================================
            """
    )
}
fun showMenu(): Int {
    while (true) {
        println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1 - –ü–µ—Ä–µ–π—Ç–∏ –≤ –¥—Ä—É–≥—É—é –∫–æ–º–Ω–∞—Ç—É \n2 - –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n0 - –í—ã—Ö–æ–¥")
        val chooseAction = readln()
        if (!chooseAction.contains("[–∞-—è–ê-—èA-Za-z]".toRegex()) && chooseAction.isNotBlank() && chooseAction.toInt() in 0..2) {
            return chooseAction.toInt()
        } else println("‚ùó–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞. ")
    }
}
fun showRooms(rooms: MutableList<Room>): Int {
    while (true) {
        println("----------------------")
        println("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–Ω–∞—Ç—É:\n1 - ${rooms[0].name}\n2 - ${rooms[1].name}\n3 - ${rooms[2].name}\n0 - –ù–∞–∑–∞–¥")
        val chooseRoom = readln().toIntOrNull()
        if (chooseRoom in 0..3) return chooseRoom!!
        else println("–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞."); continue
    }
}
fun endMessage(name: String, inventory: Array<Item?>) {
    val listOfInventory: MutableList <String> = mutableListOf()
    inventory.filterNotNull().forEach {
        if((it.name != "–ù–µ—Å–∫–æ–ª—å–∫–æ –ø–∞—á–µ–∫ –¥–µ–Ω–µ–≥") && (it.name != "üîë–ö–ª—é—á –æ—Ç –Ω–∞—Ä—É—á–Ω–∏–∫–æ–≤")){
            listOfInventory.add(it.name)
        }
    }
    println("–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–ª–µ–¥—É—é—â–µ–µ:")
    Thread.sleep(1500)
    println(
        """
            =========================================================
            |     –í—ã  –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç–µ—Å—å –∫ –°–µ—Ä–µ–≥–µ  -  —Å—Ç–∞—Ä–æ–º—É  –¥—Ä—É–≥—É,  |
            | –±–æ–µ–≤–æ–º—É —Ç–æ–≤–∞—Ä–∏—â—É, –∞  –≤  —ç—Ç–æ—Ç —Ä–∞–∑ –µ—â–µ –∏ –Ω–∞–ø–∞—Ä–Ω–∏–∫—É  –ø–æ  |
            | –∫–≤–∞—Ä—Ç–∏—Ä–Ω—ã–º –∫—Ä–∞–∂–∞–º: –°–µ—Ä–µ–≥–∞ –≤—Å–µ –µ—â–µ –ø—Ä–∏–∫–æ–≤–∞–Ω –∫ –±–∞—Ç–∞—Ä–µ–µ. | 
            | –ù–∞—Ä—É—á–Ω–∏–∫–∞–º–∏.                                          |
            |     –ó–∞–≤–∏–¥—è  –≤  –≤–∞—à–∏—Ö  —Ä—É–∫–∞—Ö  –∑–∞–≤–µ—Ç–Ω—ã–µ  –∫–ª—é—á–∏, –°–µ—Ä–≥–µ–π, |
            | –≤–æ–æ–¥—É—à–µ–≤—è—Å—å,  –Ω–µ–ª–µ–ø–æ   –≤—Å–∫–∞–∫–∏–≤–∞–µ—Ç  —Å  –∫–æ–ª–µ–Ω,  —Å–ª–æ–≤–Ω–æ  |
            | –≥–æ—Ç–æ–≤—è—Å—å –∫ —Å—Ç–∞—Ä—Ç—É. –©–µ–ª—á–æ–∫.                            |
            |     –ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π  –ª—è–∑–≥  —Ä–∞–∑–æ—Ä–≤–∞–ª  —Ç–∏—à–∏–Ω—É  –∫–≤–∞—Ä—Ç–∏—Ä—ã,  | 
            | –æ—Ç–¥–µ–ª–∏–≤   –º—è—Å–Ω–æ–≥–æ   –°–µ—Ä–µ–≥—É  –æ—Ç  —á—É–≥—É–Ω–Ω–æ–π   –±–∞—Ç–∞—Ä–µ–∏.   |
              "–°–ø–∞—Å–∏–±–æ, $name, –±—Ä–∞—Ç–∞–Ω!" - —Ä–∞–¥—É–µ—Ç—Å—è –°–µ—Ä–µ–≥–∞.            
            |     "–°–≤–æ–±–æ–¥–∞. –ë–µ—Ä–µ–º –±–∞–±–∫–∏ –∏ –≤–∞–ª–∏–º –æ—Ç—Å—é–¥–∞"             |
            |                                                       |
            |    
            |   –û—Å—Ç–∞—Ç–æ–∫  –≤–µ—á–µ—Ä–∞  –≤—ã –ø—Ä–æ–≤–µ–ª–∏  –≤  –æ–¥–Ω–æ–º  –∏–∑  —Å–∞–º—ã—Ö    |
            | –¥–æ—Ä–æ–≥–∏—Ö   —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤  –≥–æ—Ä–æ–¥–∞, —Ä–∞—Å—Å—ã–ø–∞—è—Å—å –¥—Ä—É–≥  –ø–µ—Ä–µ–¥  |
            | –¥—Ä—É–≥–æ–º  –≤  –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º  —É–≤–∞–∂–µ–Ω–∏–∏  –∏  –≤–µ—Ä–Ω–æ—Å—Ç–∏ –¥—Ä—É–∂–±–µ. |
            | –ê  –ø–æ—Ç–æ–º, –ø–æ–∫–∞  –≤—ã  —Å–ø–æ—Ä–∏–ª–∏  —Å  –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–º  –∑–∞  –ø—Ä–∞–≤–æ |
            | –≤—ã—Ç–∏—Ä–∞—Ç—å —Ä–æ—Ç —Å–∫–∞—Ç–µ—Ä—Ç—å—é, –°–µ—Ä–µ–≥–∞ –≤–Ω–µ–∑–∞–ø–Ω–æ –∏—Å—á–µ–∑.        |
            |    –ê –≤–º–µ—Å—Ç–µ —Å –Ω–∏–º –∏—Å—á–µ–∑–ª–∏ –∏ –≤—Å–µ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏.  |
            |                                                       |
            |    –°–ø—É—Å—Ç—è –Ω–µ–¥–µ–ª—é –∏–∑ –≤—ã–ø—É—Å–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –≤—ã —É–∑–Ω–∞–ª–∏, —á—Ç–æ   |
            | –µ–≥–æ  –ø—Ä–∏–Ω—è–ª–∏  –≤  –∞—ç—Ä–æ–ø–æ—Ä—Ç—É —Å  –ø–æ–¥–¥–µ–ª—å–Ω—ã–º  –ø–∞—Å–ø–æ—Ä—Ç–æ–º –∏ |
            | —Ñ–∞–ª—å—à–∏–≤—ã–º–∏ –∫—É–ø—É—Ä–∞–º–∏.                                  |
            | –ö–∞–∫ –∏ –ø–æ—á–µ–º—É –°–µ—Ä–µ–≥–∞  –æ–∫–∞–∑–∞–ª—Å—è –ø—Ä–∏–∫–æ–≤–∞–Ω–Ω—ã–º –Ω–∞—Ä—É—á–Ω–∏–∫–∞–º–∏ | 
            | –≤ —ç—Ç–æ–º –∑–ª–∞–ø–æ–ª—É—á–Ω–æ–º –¥–æ–º–µ - –∏—Å—Ç–æ—Ä–∏—è —É–º–∞–ª—á–∏–≤–∞–µ—Ç.         |
            |                                                       |
            |                                               –ö–û–ù–ï–¶   |
            =========================================================

–î–ª—è –≤–∞—Å –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —Ö–æ—Ä–æ—à–æ, –≤ –ø–∞–º—è—Ç—å –æ –Ω–µ–π –Ω–∞–ø–æ–º–∏–Ω–∞—é—Ç –ª–∏—à—å –≤–µ—â–∏, –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —É –≤–∞—Å: 
${listOfInventory.joinToString()}. –¢–æ–ª—å–∫–æ –≤–æ—Ç –¥–µ–Ω–µ–≥ –Ω–µ—Ç...
–ù–æ –∑–∞—Ç–æ –µ—Å—Ç—å –º–∞–ª–µ–Ω—å–∫–∏–π –∫–ª—é—á–∏–∫ –æ—Ç –Ω–∞—Ä—É—á–Ω–∏–∫–æ–≤ —Å –∫—Ä–∞—Å–∏–≤–æ–π —Ñ–∏–ª–∏–≥—Ä–∞–Ω—å—é –∏ –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–æ–π –≤ –≤–∏–¥–µ –±—É–∫–≤—ã "L".
            """)
}


